pages:
- path: users/active
  blocks: 
  # - type: markdown
  #   content: >
  #     ## 7일 가입자 조회
  - type: http
    name: Block Post Download
    axios: 
      url: "{{APP_AWS_URL}}/users/export"
      method: POST
    responseType: blob
    filename: UserExport-{{purpose}}.xlsx
    params:
      - key: APP_AWS_URL
        valueFromEnv: true
      - key: purpose
  
  - type: http
    name: Block Get Image
    axios: 
      url: "{{APP_AWS_URL}}/users/image"
      method: POST
      methodType: GET
    responseType: blob
    display: image
    template: |
      <a href="#" target="_blank">
        <img src="{{src}}" />
      </a>
    style:
      maxHeight: 300px
      margin: 0 auto
    params:
      - key: APP_AWS_URL
        valueFromEnv: true
  
  - type: http
    sqlType: select
    name: LIST
    axios:
      url: http://localhost:9300/users
      method: GET
    rowsPath: rows
    selectOptions:
      enabled: true
    actions:
      - type: http
        # modal: true
        axios: 
          url: "{{APP_AWS_URL}}/users/send"
          method: POST
          data:
            memo: "{{memo}}"
            "userIds": [1,2,3]
            "name": "{{name.value}}"
            "mobile": "{{mobile.value}}"
            "email": "{{email}}"
            "title": "title"
        params:
          - key: memo
          - key: name
            valueFromSelectedRows: true
          - key: mobile
            valueFromSelectedRows: true
          - key: email
            valueFromUserProperty: "{{email}}"
          - key: APP_AWS_URL
            valueFromEnv: true
        # forEach: true
        # reloadAfterSubmit: true
      # - type: http
      #   label: Download
      #   axios: 
      #     url: "{{APP_AWS_URL}}/users/export"
      #     method: POST
      #     data:
      #       "userIds": "{{ name.value }}"
      #   params:
      #     - key: name
      #       valueFromSelectedRows: true
      #     - key: APP_AWS_URL
      #       valueFromEnv: true
      #   # forEach: true
      #   # reloadAfterSubmit: true
      - type: http
        label: Download
        single: true
        axios: 
          url: "{{APP_AWS_URL}}/users/export"
          method: POST
          # data:
          #   "userIds": "{{ name.value }}"
        # responseType: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet
        responseType: blob
        filename: UserExport.xlsx
        params:
          # - key: name
          #   valueFromSelectedRows: true
          - key: APP_AWS_URL
            valueFromEnv: true
        # forEach: true
        # reloadAfterSubmit: true
    viewModal:
      useColumn: name
      blocks:
        - type: http
          name: 1
          axios: 
            url: "{{APP_AWS_URL}}/users/image"
            params:
              name: "{{name}}"
            method: POST
            methodType: GET
          responseType: blob
          display: image
          style:
            maxHeight: 300px
            margin: 0 auto
          params:
            - key: APP_AWS_URL
              valueFromEnv: true
            - key: name
              valueFromRow: name
        
- path: users/dormant
  blocks:
  # - type: markdown
  #   content: >
  #     ## 휴면회원 조회
  - type: http
    axios:
      method: POST
      url: https://api.selectfromuser.com/sample-api/upload
      headers: 
        Content-Type: multipart/form-data
    params:
      - key: title
        value: title
      - key: file
        format: file
        id: multipartFileRequest
    rowsPath: result
    showResult: table
    # showResult: template
    # showResultTemplate: |
    #   object_url: {{object_url}}
    #   name: {{name}}
    columns:
      object_url:
        format: image
        copy: true
      file:
        hidden: true
      name:
        format: template
        template: |
          <a href="{{object_url}}" target="_blank">{{name}}</a>
    responseFn: |
      rows.name = rows.file.originalname    
    
- path: users/promotion
  blocks:
  # - type: markdown
  #   content: >
  #     ## 동의/미동의 조회

  - type: http
    axios:
      method: POST
      url: https://httpbin.selectfromuser.com/anything
      params:
        id: "{{id}}"
        email: "{{email}}"
        name: "{{name}}"
    params:
      - key: id
        valueFromUserProperty: "{{id}}"
      - key: email
        valueFromUserProperty: "{{email}}"
      - key: name
        valueFromUserProperty: "{{name}}"

  - type: http
    axios:
      method: GET
      # url: https://api.selectfromuser.com/sample-api/products
      url: *apiProducts
      params:
        id: "{{id}}"
        email: "{{email}}"
        name: "{{name}}"
    params:
      - key: id
        valueFromUserProperty: "{{id}}"
      - key: email
        valueFromUserProperty: "{{email}}"
      - key: name
        valueFromUserProperty: "{{name}}"
    # selectOptions:
    #   enabled: true
    # actions:
    # - type: http
    #   label: DELETE
    #   axios:
    #     method: DELETE
    #     url: https://httpbin.selectfromuser.com/anything
    #     headers:
    #       apiKey: 'supabase_key'
    #       Authorization: 'Bearer supabase_key'
    #   params:
    #   - key: id
    #     valueFromSelectedRows: id
    rowsPath: rows
    columns:
      id:
        openModal: modal1-:id
    modals:
      - path: modal1-:id
        blocks:
        - type: http
          axios:
            method: GET
            url: https://api.selectfromuser.com/sample-api/products        
          rowsPath: rows
          display: form
          columns:
            id:
              editable: true
            name: 
              editable: true
          updateOptions:
            type: http
            axios:
              method: POST
              url: https://httpbin.selectfromuser.com/anything
              # <<: *commonApiHeader
              data:
              year: '{{year}}'
            confirm: false
            request: |
              const year = params.find(e ==> e.key == 'year')
              const _year = _params.find(e ==> e.key == 'year')

              year.value = _year.value

  # - type: top
  #   blocks:
  #     - type: http
  #       axios:
  #         method: POST
  #         url: https://httpbin.selectfromuser.com/anything              
  #         params:
  #           keyword: '{{keyword || null}}' # 치환이 동작하지 않음 스트링 문자열그대로 반환됨
  #       params:
  #       - key: keyword
  #       roles:
  #         edit:
  #           - email::jhlee@selectfromuser.com~~~~~

  # - type: http
  #   axios:
  #     method: POST
  #     url: https://httpbin.selectfromuser.com/anything      
  #     params:
  #       keyword: '{{keyword2 || null}}' 
  #   params:
  #   - key: keyword2